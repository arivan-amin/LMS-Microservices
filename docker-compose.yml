volumes:
  app-logs:
  mysql-data:
  redis-data:
  kafka-data:
  tempo-data:
  loki-data:
  prometheus-data:
  grafana-data:

x-base-service: &base-service
  restart: unless-stopped
  env_file:
    - .env
  volumes:
    - app-logs:/root/Apps/LMS-Microservices/Logs/
  depends_on:
    - discovery-server

services:
  discovery-server:
    <<: *base-service
    image: arivanamin/lms-discovery-server
    container_name: Discovery-Server
    ports:
      - "8761:8761"
    depends_on: [ ]

  api-gateway:
    <<: *base-service
    image: arivanamin/lms-api-gateway
    container_name: API-Gateway
    ports:
      - "8080:8080"
    depends_on:
      - redis

  tempo:
    image: grafana/tempo:2.8.2
    container_name: Tempo
    restart: unless-stopped
    command:
      - -config.file=/etc/tempo.yaml
    volumes:
      - ./Docker/tempo/tempo.yml:/etc/tempo.yaml:ro
      - tempo-data:/var/tempo
    ports:
      - "3200:3200"
  
  otel:
    image: otel/opentelemetry-collector:0.136.0
    container_name: Otel
    restart: unless-stopped
    command:
      - --config=/etc/otel-collector-config.yaml
    volumes:
      - ./Docker/otel/otel-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4318:4318"
    depends_on:
      - tempo

  loki:
    image: grafana/loki:3.5.5
    container_name: Loki
    restart: unless-stopped
    command:
      - -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki-data:/loki
    ports:
      - "3100:3100"

  promtail:
    image: grafana/promtail:3.5.5
    container_name: Promtail
    restart: unless-stopped
    command:
      - -config.file=/etc/promtail/config.yml
    volumes:
      - ./Docker/promtail/promtail-config.yaml:/etc/promtail/config.yml
      - app-logs:/logs
      - ${HOME}/Apps/LMS-Microservices/Logs:/local-logs

  prometheus:
    image: prom/prometheus:v3.6.0
    container_name: Prometheus
    restart: unless-stopped
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./Docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"


  grafana:
    image: grafana/grafana:12.2.0
    container_name: Grafana
    restart: unless-stopped
    volumes:
      - ./Docker/grafana:/etc/grafana/provisioning/datasources:ro
      - grafana-data:/var/lib/grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"

  mysql:
    image: mysql:9.4.0
    container_name: MySQL
    restart: unless-stopped
    volumes:
      - mysql-data:/var/lib/mysql
      - ./Docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      MYSQL_ROOT_PASSWORD: mysql
    ports:
      - "3306:3306"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.2.2
    container_name: PhpMyAdmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: mysql
    ports:
      - "9797:80"
    depends_on:
      - mysql

  redis:
    image: redis:8.2.1
    container_name: Redis-Server
    restart: unless-stopped
    command:
      - redis-server --appendonly yes
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"

  kafka:
    image: apache/kafka:4.1.0
    container_name: Kafka
    restart: unless-stopped
    environment:
      - KAFKA_NODE_ID=1
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@localhost:9093
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_NUM_PARTITIONS=3
      - KAFKA_LOG_DIRS=/var/lib/kafka/data
    volumes:
      - kafka-data:/var/lib/kafka/data
    ports:
      - "9092:9092"
